{"version":3,"names":[],"mappings":"","sources":["providers/wikidata.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Http } from '@angular/http';\nimport { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\nvar Wikidata = (function () {\n    function Wikidata(http) {\n        this.http = http;\n        this.wd = \"http://www.wikidata.org/w/api.php?\";\n        this.wp = \"http://en.wikipedia.org/w/api.php?\";\n        this.aw = \"action=wbgetentities\";\n        this.aq = \"action=query\";\n        this.ts = \"&sites=enwiki\";\n        this.t = \"&titles=\";\n        this.i = \"Dragon\";\n        this.l = \"&languages=zh|zh-classical|zh-cn|zh-hans|zh-hant|zh-hk|zh-min-nan|zh-mo|zh-my|zh-sg|zh-tw|fr\";\n        this.ps = \"&props=sitelinks|labels|aliases|descriptions\";\n        this.p = \"&prop=extracts&exintro&explaintext&exsentences=10\";\n        this.r = \"&redirects&converttitles\";\n        this.c = \"&callback=?\";\n        this.f = \"&format=json\";\n        var urlwd = this.wd +\n            this.aw +\n            this.ts +\n            this.t +\n            this.i +\n            this.l +\n            this.ps +\n            this.c +\n            this.f;\n        var url = this.wp +\n            this.aq +\n            this.t +\n            this.i +\n            this.p +\n            this.r +\n            this.c +\n            this.f;\n        console.log(\"1. WD: \" + urlwd);\n        console.log(\"2. WP: \" + url);\n    }\n    Wikidata.prototype.getData = function (item) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var url = _this.wp +\n                _this.aq +\n                _this.t +\n                item +\n                _this.p +\n                _this.r +\n                _this.c +\n                _this.f;\n            console.log(url);\n            _this.http.get(url, function (json) {\n                var item_id = Object.keys(json.query.pages)[0];\n                var extract = json.query.pages[item_id].extract;\n                var result = \"<b>En :</b> <t>\" + item + \"</t> <b>â‡’</b> \" + extract;\n                resolve(result);\n            });\n        });\n    };\n    Wikidata.prototype.singleQuery = function (item) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var url_tpl = _this.wp +\n                _this.aq +\n                _this.t +\n                item +\n                _this.p +\n                _this.r +\n                _this.c +\n                _this.f;\n            _this.http.get(url_tpl, function (data) {\n                console.log('data', data);\n                resolve(data);\n            });\n        });\n    };\n    return Wikidata;\n}());\nWikidata = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [Http])\n], Wikidata);\nexport { Wikidata };\n"],"file":"wikidata.js"}